import sqlite3

def save(datas):
    conn = sqlite3.connect("report/data.db")
    cur = conn.cursor()
    cur.execute('DROP TABLE IF EXISTS weakpass')
    cur.execute("create table weakpass (ip varchar(50), service varchar(50), user varchar(100), pass varchar(100))")
    for d in datas:
        cur.execute("insert into weakpass(ip, service, user, pass) values(?,?,?,?)", (d['ip'], d['service'], d['user'], d['pass']))
    conn.commit()
    conn.close()


def parse_hydra():
    results = []
    server_user_pass = ['asterisk' , 'ftp', 'ftps', 'http-proxy', 'imap', 'imaps', 'mssql',
                     'mysql', 'pcanywhere', 'vnc', 'pop3', 'pop3s', 'postgres', 'rdp', 'rexec', 'rlogin',
                     'rsh', 'smb', 'smtp', 'smtps', 'smtp-enum', 'snmp', 'socks5', 'ssh', 'svn', 'teamspeak', 'telnet',
                     'telnets', 'vmauthd', 'vnc', 'xmpp']
    server_only_pass = ['cisco', 'cisco-enable', 'redis', 'snmp']

    
    with open('out/hydra/final.result') as f:
        for line in f:
            try:
                for server in server_user_pass+server_only_pass:
                    if '[' + server + ']' in line:
                        if server in server_only_pass:
                            password = line.split('password: ')[1].strip()
                            host = line.split('host: ')[1].split('   ')[0].strip()
                            print("发现弱密码:" + server + "," + host + "," + password) 
                            results.append({"user": "", "pass":password, "ip":host, "service": server})
                        # 解析hydra爆破成功结果
                        elif 'login:' in line:
                            user = line.split('login: ')[1].split('   ')[0].strip()
                            host = line.split('host: ')[1].split('   ')[0].strip()
                            password = line.split('password: ')[1].strip()
                            print("发现弱密码:" + server + "," + host + "," + user + "," + password)   
                            results.append({"user": user , "pass":password, "ip":host, "service": server})                 
            except Exception as e:
                print("hydra Error %s" % (str(e)))
    return results

if __name__ == "__main__":
    datas = parse_hydra()
    save(datas)
    